menuconfig LIBUKDEBUG
	bool "ukdebug: Debugging and tracing"
	depends on (HAVE_LIBC || LIBNOLIBC)
	select LIBUKLIBID
	default y

if LIBUKDEBUG

config LIBUKDEBUG_ENABLE_ASSERT
	bool "Enable assertions"
	default y
	help
	  Build code with assertions.

menuconfig LIBUKDEBUG_TRACEPOINTS
	bool "Enable tracepoints"
	default n
	help
	  Tracepoints are stored in an internal, fixed-size buffer. When the end
	  of the buffer is reached, tracing disables itself.
if LIBUKDEBUG_TRACEPOINTS
config LIBUKDEBUG_TRACE_BUFFER_SIZE
	int "Size of the trace buffer"
	default 16384

config LIBUKDEBUG_ALL_TRACEPOINTS
	bool "Enable all tracepoints at once"
	default n
endif

config LIBUKDEBUG_GDBSTUB
	bool "GDB stub"
	depends on (ARCH_X86_64 || ARCH_ARM_64)
	# FIXME: `select LIBUKCONSOLE` would be preferred, but `select`
	# currently causes a circular dependency
	depends on LIBUKCONSOLE
	depends on LIBUKLIBPARAM
	select LIBUKNOFAULT
	select LIBISRLIB
	help
        The GDB stub allows connecting GDB to Unikraft via a serial
        console. Set the debug.gdb_cons kernel parameter to the ID of
        a console device to enable the GDB stub. The console device with
        this ID will be used to communicate with GDB. If there is only
        one console device on the system, its ID is always 0.

config LIBUKDEBUG_GDBSTUB_ALWAYS_ACK
	bool "Always use acknowledgments"
	depends on LIBUKDEBUG_GDBSTUB
	help
	The GDB host and the GDB stub use short acknowledgment packages
	to, e.g., catch transmission errors on unreliable connections.
	The downside of the acknowledgment packages is that they slow
	down communications. The slow-down can become severe if lots of
	output is sent to the GDB host when kernel output is transmitted
	over the GDB connection. Refer to the GDB documentation for more
	information.

endif
